From 5bbacdd06e1725e4a93a9d7b08c9c510c38cb548 Mon Sep 17 00:00:00 2001
From: Felix Abecassis <fabecassis@nvidia.com>
Date: Wed, 3 Jan 2018 13:01:26 -0800
Subject: [PATCH 2/2] Add prestart hook nvidia-container-toolkit to the
 config

Signed-off-by: Felix Abecassis <fabecassis@nvidia.com>
---
 utils.go | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/utils.go b/utils.go
index 55a7e9d..d6f9739 100644
--- a/utils.go
+++ b/utils.go
@@ -3,6 +3,7 @@ package main
 import (
 	"fmt"
 	"os"
+	"os/exec"
 
 	"github.com/Sirupsen/logrus"
 	"github.com/opencontainers/runtime-spec/specs-go"
@@ -18,6 +19,23 @@ func fatal(err error) {
 	os.Exit(1)
 }
 
+func addNVIDIAHook(context *cli.Context, spec *specs.Spec) error {
+	path, err := exec.LookPath("nvidia-container-toolkit")
+	if err != nil {
+		return err
+	}
+	args := []string{path}
+	if context.GlobalBool("debug") {
+		args = append(args, "-debug")
+	}
+	spec.Hooks.Prestart = append(spec.Hooks.Prestart, specs.Hook{
+		Path: path,
+		Args: append(args, "prestart"),
+	})
+
+	return nil
+}
+
 // setupSpec performs inital setup based on the cli.Context for the container
 func setupSpec(context *cli.Context) (*specs.Spec, error) {
 	bundle := context.String("bundle")
@@ -30,6 +48,11 @@ func setupSpec(context *cli.Context) (*specs.Spec, error) {
 	if err != nil {
 		return nil, err
 	}
+
+	if err = addNVIDIAHook(context, spec); err != nil {
+		return nil, err
+	}
+
 	notifySocket := os.Getenv("NOTIFY_SOCKET")
 	if notifySocket != "" {
 		setupSdNotify(spec, notifySocket)
-- 
2.7.4

